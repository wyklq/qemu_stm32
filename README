[This fork contains a few line of change for Android/x86-64 under termux enviornment ]

QEMU with STM32 Microcontroller Implementation

Official Homepage: http://beckus.github.io/qemu_stm32/

OVERVIEW
This is a copy of QEMU that has been modified to include an implementation
of the STM32 microcontroller.  It also implements an Olimex STM32_P103
developmentvboard.  This project runs the demos located in the
stm32_p103_demos project located at: https://github.com/beckus/stm32_p103_demos .

Commands for a typical build:
./configure --enable-debug --target-list="arm-softmmu"
make

Useful make commands when rebuilding:
    make defconfig
    make clean

If you receive a warning during compilation, this may cause the build to fail.
In this case you can pass the following option to the "configure" command to
ignore warnings:
    --disable-werror

The generated executable is arm-softmmu/qemu-system-arm .

Other configure options which control the STM32 implementation:

    --extra-cflags=-DDEBUG_CLKTREE
        Print out clock tree debug statements.

    --extra-cflags=-DDEBUG_STM32_RCC
    --extra-cflags=-DDEBUG_STM32_UART
    --extra-cflags=-DDEBUG_STM32_TIMER
        Print debug statements for specific peripherals.

    --extra-cflags=-DSTM32_UART_NO_BAUD_DELAY
        Disable the BAUD rate timing simulation
        (i.e. the UART will transmit or receive as fast as possible, rather than
        using a realistic delay).

    --extra-cflags=-DSTM32_UART_ENABLE_OVERRUN
        Enable setting of the overrun flag if a character is
        received before the last one is processed.  If this is not set, the UART
        will not receive the next character until the previous one is read by
        software.  Although less realisitic, this is safer in case the VM is
        running slow.

Other QEMU configure options which are useful for troubleshooting:
    --extra-cflags=-DDEBUG_GIC

qemu-system-arm options which are useful for trobuleshooting:
    -d ?
        To see available log levels

    -d unimp,guest
        Enable logging to view warnings when an unimplemented register is
        accessed or when an invalid register access is attempted.  This is
        especially useful since many registers are not implemented.

    -d cpu,in_asm
        Enable logging to view the CPU state during execution and the ARM
        instructions which are being executed.  I believe --enable-debug must be
        used for this to work.
        By default, you can find the output in /tmp/qemu.log:

UNIT TESTING
Unit test scripts are included for the STM32 implementation.
These test will be executed when running "make" with the standard
check targets (see tests/Makefile for documentation of QEMU's unit
testing features):
    make check
    make check-qtest-arm

DOCKER CONTAINER
A Docker container containing qemu_stm32 can be built from the Dockerfile:
    docker build . -t qemu_stm32
It can run the examples in stm32_p103_demos:
    docker run --rm qemu_stm32 /usr/local/bin/qemu-system-arm -M stm32-p103 -kernel /stm32_p103_demos/demos/freertos_singlethread/main.bin


The original QEMU README follows:

Read the documentation in qemu-doc.html or on http://wiki.qemu-project.org

- QEMU team
